<!DOCTYPE html>
<html >
<head>
  <meta charset="UTF-8">
  <title>rangeslider.js - Programmatically toggle disabled state</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel='stylesheet prefetch' href='rangeslider.css'>

  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.2.1.js" integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>

</head>

<body>
  <h1>Administration console</h1>

  <div class="container-fluid">
    <div class="row">
      <div class="col-md-5">
        <h5>Rotation slider</h5>
        <input id="rotationSlider" type="range" min="0" max="1000" step="10" value="500" data-orientation="horizontal" />
      </div>
      <div class="col-md-2" style="height: 500px">
        <h5>Y slider</h5>
        <input id="Y_Slider" type="range" min="0" max="1000" step="10" value="1000" data-orientation="vertical" />
      </div>
      <div class="col-md-4" style="height: 500px">
        <button type="button" class="btn btn-warning" onclick="resetPosition();">Reset position</button>
        <button type="button" class="btn btn-info" onclick="addInstruction();">Add position</button>

        <div class="btn-group" data-toggle="buttons">
          <label class="btn btn-primary active">
            <input type="radio" name="options" id="auto_option" autocomplete="off" checked> Auto
          </label>
          <label class="btn btn-primary">
            <input type="radio" name="options" id="manual_option" autocomplete="off"> Manual
          </label>
        </div>


        <h3>Instructions list</h3>
        <br/>
        <div style="height : 300px; overflow: scroll">
          <ul id="instructionsList" class="list-group">

          </ul>
        </div>
        <br/>
        <button type="button" class="btn btn-success" onclick="sendInstructions();">Send instructions</button>
      </div>
    </div>
  </div>
  <br/>

  <div class="container w-75">
    <h5>X slider</h5>
    <input id="X_Slider" type="range" min="0" max="1000" step="10" value="0" data-orientation="horizontal"/>
  </div>

  <script src='/rangeslider.min.js'></script>

  <script type="text/javascript">
    var originalSystemPosition = {x:0,y:1000,a:500};
    var oldSystemPosition = {x:0,y:1000,a:500};

    $("#X_Slider").rangeslider({
      polyfill: false,
      onSlideEnd: function(position, value){

      }
    });

    $("#Y_Slider").rangeslider({
      polyfill: false,
      onSlideEnd: function(position, value){
        console.log(position);
      }
    });

    $("#rotationSlider").rangeslider({
      polyfill: false
    });

    function resetPosition(){
      var instructionToAdd = {"X_axisMovement": -1000, "Y_axisMovement": -1000};
      $("#instructionsList").append('<li class="list-group-item">' + JSON.stringify(instructionToAdd) + '</li>');
      sendInstructions();
    }

    function addInstruction(){
      var instructionToAdd = {"X_axisMovement":$("#X_Slider").val()-oldSystemPosition.x, "A_axisMovement":$("#rotationSlider").val()-oldSystemPosition.a, "Y_axisMovement":$("#Y_Slider").val()-oldSystemPosition.y};
      $("#instructionsList").append('<li class="list-group-item">' + JSON.stringify(instructionToAdd) + '</li>');
      updateOldPosition();
    }

    function updateOldPosition(){
      oldSystemPosition.x = $("#X_Slider").val();
      oldSystemPosition.y = $("#Y_Slider").val();
      oldSystemPosition.a = $("#rotationSlider").val();
    }

    function sendInstructions(){
      var allInstructions = $( "ul" ).children();
      var nbrOfInstruction = allInstructions.length;
      if(nbrOfInstruction > 0){
        enableOrDisableButtons(true);
        $("#X_Slider").val(originalSystemPosition.x).change();
        $("#Y_Slider").val(originalSystemPosition.y).change();
        $("#rotationSlider").val(originalSystemPosition.a).change();
        executeInstruction(allInstructions.toArray());
      }
    }

    function executeInstruction(listOfInstruction){
      if(listOfInstruction.length > 0){
        var liToExecute = $(listOfInstruction[0]);//We need the Jquery version of the element
        listOfInstruction.shift(); //Let's remove the first element
        var jsonInstruction = JSON.parse(liToExecute.text());

        $.post( "/cnc/command", jsonInstruction, function(data) {
          if(!data.success){
            $("#rotationSlider").val(jsonInstruction.A_axisMovement+parseInt($("#rotationSlider").val())).change();
            $("#X_Slider").val(jsonInstruction.X_axisMovement+parseInt($("#X_Slider").val())).change();
            $("#Y_Slider").val(jsonInstruction.Y_axisMovement+parseInt($("#Y_Slider").val())).change();

            liToExecute.remove();
            setTimeout(executeInstruction.bind(null, listOfInstruction),2000);
          }
        });
      }else{//We just finished to read all the instructions we can enable the buttons
        enableOrDisableButtons(false);
        originalSystemPosition.x = $("#X_Slider").val();
        originalSystemPosition.y = $("#Y_Slider").val();
        originalSystemPosition.a = $("#rotationSlider").val();
      }
    }

    function enableOrDisableButtons(enable){
      $('button').prop('disabled', enable);
    }
  </script>

</body>
</html>
